---
layout: post_mine
title:  daily notes
date:   2016-01-22 07:19:20
categories: update
---

## :star: 置顶

[机器学习专家与统计学家观点上有哪些不同？](https://www.zhihu.com/question/29687860)

[机器学习该怎么入门？](https://www.zhihu.com/question/20691338)

[机器学习有很多关于核函数的说法，核函数的定义和作用是什么？](https://www.zhihu.com/question/24627666)

[如何用简单易懂的例子解释隐马尔可夫模型？](https://www.zhihu.com/question/20962240)

[「社会网络分析」是怎样的学科?](https://www.zhihu.com/question/28939731)

[如何准备机器学习工程师的面试?](https://www.zhihu.com/question/23259302)

## BOOK

[Introduction to Information Retrieval](http://nlp.stanford.edu/IR-book/)

## 统计学习方法概论

[线性分类器与非线性分类器的区别？](https://www.zhihu.com/question/30633734)
[2](http://nlp.stanford.edu/IR-book/html/htmledition/linear-versus-nonlinear-classifiers-1.html)

[Empirical risk minimization](https://en.wikipedia.org/wiki/Empirical_risk_minimization)

### 正则化

[Regularzation/Penalty](https://en.wikipedia.org/wiki/Regularization_(mathematics))

[如何理解统计学中「惩罚」的概念？](https://www.zhihu.com/question/30037293)

一些情況下，`懲罰`有獨特的概率上的解釋，比如假設正太噪聲的線性模型中，LASSO的L1懲罰相當於給回歸參數加上了一個Laplace prior，而`岭回归`Ridge regression中的L2懲罰則對應一般的normal prior這樣的方法在統計中一般叫正則化Regularization，當然也可以叫懲罰Penalization，正則化由Tikhonov在解ill-posed equation時引入，通過加上懲罰項（一般來說是hilbert space上的Lp norm）來限制解可以取值的範圍以保證解的良好性質，比如唯一性。後來人們發現，很多問題如果你給他太大的空間，搜索出來的解即便存在唯一，往往也不夠好(under some other criteria, like predictive MSE, AIC, BIC )，這個涉及Occam Razor principle，統計中的bias variance trade off，擬合和預測的trade off啦，總的來說，讓參數們老實點，別xjb亂跑，得到的結果會比較好。

[机器学习“判定模型”和“生成模型‘有什么区别？](https://www.zhihu.com/question/20446337)

### [感知机模型-Perceptron](https://en.wikipedia.org/wiki/Perceptron)

[scikit-learn code](https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/linear_model/perceptron.py)

[范数?](https://www.zhihu.com/question/21868680)

:star: [机器学习中的范数规则化之（一）L0、L1与L2范数](http://blog.csdn.net/zouxy09/article/details/24971995/)

[怎么形象地理解对偶空间(Dual Vector Space)](https://www.zhihu.com/question/38464481)

> 感知机的对偶解法

### [K近邻](#)

### [朴素贝叶斯](https://en.wikipedia.org/wiki/Naive_Bayes_classifier)

![zhihu](/images/zhihu_16.png)[请用简单易懂的语言描述朴素贝叶斯分类器](https://www.zhihu.com/question/19960417)

![zhihu](/images/zhihu_16.png)[朴素贝叶斯分类器和一般的贝叶斯分类器有什么区别](https://www.zhihu.com/question/20138060)

[数学之美番外篇：平凡而又神奇的贝叶斯方法](http://mindhacks.cn/2008/09/21/the-magical-bayesian-method/)

### [决策树](#)

[极大似然估计MLE](https://en.wikipedia.org/wiki/Maximum_likelihood)

[2](http://blog.csdn.net/yanqingan/article/details/6125812)

[欧几里得空间](https://zh.wikipedia.org/wiki/欧几里得空间)

[希尔伯特空间](https://zh.wikipedia.org/wiki/希尔伯特空间)

[](#)


## 2016-02-15

`SVM`

* linear support vector machine in linearly separable case
* linear support vector machine
* non-linear support vector machine

:link: [clean git history](https://hellocoding.wordpress.com/2015/01/19/delete-all-commit-history-github/)
:link: [Mathjax](http://docs.mathjax.org/en/latest/installation.html)
:link: [Mathjax with Jekyll](http://gastonsanchez.com/opinion/2014/02/16/Mathjax-with-jekyll/)

## 2016-02-13

[中文的开源车牌识别系统](https://github.com/liuruoze/EasyPR)

[Online Markdown Editor](https://github.com/pandao/editor.md)

[Material Design CSS Framework](https://github.com/muicss/mui)

> MUI是一个轻量级的HTML、CSS和JS框架，遵循Google的Material Design设计方针。

:star: [互联网企业级监控系统](https://github.com/xiaomi/open-falcon)

> 小米运维部开源的人性化的互联网企业级监控系统Open-Falcon。Open-Falcon主要分为两部分：绘图组件和警告组件。

## 2016-02-05

[MxNet](https://github.com/dmlc/mxnet)

[最新可用的google hosts文件](https://github.com/racaljk/hosts)

## 2016-02-04



## 2016-02-03

[GNIP](http://gnip.com/)

[DataSift](http://datasift.net/)

:one: [What is the difference between Gnip and DataSift?](https://www.quora.com/What-is-the-difference-between-Gnip-and-DataSift)

:two: [Two Great Social Data Platforms: How DataSift and Gnip Stack Up](http://www.programmableweb.com/news/two-great-social-data-platforms-how-datasift-and-gnip-stack/brief/2014/02/10)

## 2016-02-02

#### ElasticSearch Term vs Match

Official ES Debug:[https://www.elastic.co/blog/found-beginner-troubleshooting](https://www.elastic.co/blog/found-beginner-troubleshooting)

> ElasticSearch types: object, nested. [DataTypes](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-types.html)

>  :white_check_mark: 今日问题:ES字符串完全匹配: 当使用nested时候,虽然index是not_analyzed,但是无法进行match或者term.更改到默认类型object后,解决问题

#### Kafka

 :point_right: [Traning Kafka](https://cwiki.apache.org/confluence/display/KAFKA/Kafka+papers+and+presentations)

:star: [Kafka-manager](https://github.com/yahoo/kafka-manager)
[KafkaOffsetMonitor](http://quantifind.com/KafkaOffsetMonitor/)

:one: [What are the popular formats used with Kafka? JSON/Avro/Protobuf/Thrift/XML?](https://www.quora.com/What-are-the-popular-formats-used-with-Kafka-JSON-Avro-Protobuf-Thrift-XML)

:two: [What are the differences between Apache Kafka and RabbitMQ?](https://www.quora.com/What-are-the-differences-between-Apache-Kafka-and-RabbitMQ)

:three: [How many topics can be created in Apache Kafka?](https://www.quora.com/How-many-topics-can-be-created-in-Apache-Kafka)

:four: [Amazon Kinesis versus Apache Kafka--which of them is the most proven and high performance-oriented?](https://www.quora.com/Amazon-Kinesis-versus-Apache-Kafka-which-of-them-is-the-most-proven-and-high-performance-oriented)

#### Time-Series Database

[http://www.infoq.com/articles/redis-time-series](http://www.infoq.com/articles/redis-time-series)

#### Emoji

 :arrow_forward:  Github emoji, [click here](http://www.emoji-cheat-sheet.com/)

 Enable in Jekyll:  gems:    - jemoji

#### Bookmarks

[https://sematext.com/](https://sematext.com/)

:one: [Q1](https://www.quora.com/Who-devised-the-first-algorithmic-random-number-generator-and-how-does-it-work)

## 2016-02-01

#### ElasticSearch Analyzer

> * An analyzer is used at index Time and at search Time. It's used to create an index of terms. 
> To index a phrase, it could be useful to break it in words. Here comes the analyzer. It applies `tokenizers` and `token filters`. A tokenizer could be a Whitespace tokenizer. It split a phrase in tokens at each space. A lowercase tokenizer will split a phrase at each non-letter and lowercase all letters. A token filter is used to filter or convert some tokens. For example, a ASCII folding filter will convert characters like ê, é, è to e. `An analyzer is a mix of all of that.`
> Read [Analysis guide](https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-analysis.html) and look at the right all different options you have. By default, Elasticsearch applies the standard analyzer. It will remove all common english words (and many other filters)
> Use the [Analyze Api](https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html) to understand how it works. Very useful.
> * [Compare with Lucene](http://stackoverflow.com/questions/5483903/comparison-of-lucene-analyzers)
> * [https://github.com/johtani/elasticsearch-extended-analyze](https://github.com/johtani/elasticsearch-extended-analyze)
> * [Cheatsheet](http://elasticsearch-cheatsheet.jolicode.com/)


#### [TensorFlow中文教程](http://wiki.jikexueyuan.com/project/tensorflow-zh/)

#### [TensorFlow](https://www.tensorflow.org/)

#### [在图像识别这一块，目前有没有可以移植到嵌入式设备的深度学习算法？](https://www.zhihu.com/question/39921464)

> 嵌入式平台上的机器学习会给很多应用打开更大的想象空间。举个例子，我去年在Google主推`mobile deep learning`，一个目前已经推出的应用是谷歌翻译软件里面的自动文字识别和翻译：[http://googleresearch.blogspot.com](http://googleresearch.blogspot.com/2015/07/how-google-translate-squeezes-deep.html), 这些小型的神经网络可以达到传统算法所无法企及的准确率，相信将来会有更大，更有意思的应用出来，具体的我就不好说了。

> [Android例子](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/android)


#### Github Blog
> Github Blog => [rodrigob](http://rodrigob.github.io/#) [https://github.com/rodrigob/rodrigob.github.com](https://github.com/rodrigob/rodrigob.github.com)


#### 怎么才能看到一个 Android App 的所有历史版本
> [http://apps.wandoujia.com/apps/com.tencent.mm/versions?pos=t/detail](http://apps.wandoujia.com/apps/com.tencent.mm/versions?pos=t/detail)

## TD-IDF
[WIKI](https://en.wikipedia.org/wiki/Tf%E2%80%93idf)

## Earley
[Earley in Haskell](https://github.com/ollef/Earley)

[Earley in Python](https://github.com/n0nick/earley_bird)

## NLP
[TextBlob](https://textblob.readthedocs.org/en/dev/)
